// IKEA control outlet cluster.
package manufacturer_specific

import (
	"hemtjan.st/zcl"
)

// Ikea
// Manufacturer code 0x117C
const IkeaID zcl.ClusterID = 64636

var IkeaCluster = zcl.Cluster{
	ServerCmd: map[zcl.CommandID]func() zcl.Command{},
	ClientCmd: map[zcl.CommandID]func() zcl.Command{},
	ServerAttr: map[zcl.AttrID]func() zcl.Attr{
		Unknown1Attr: func() zcl.Attr { return new(Unknown1) },
		Unknown2Attr: func() zcl.Attr { return new(Unknown2) },
	},
	ClientAttr: map[zcl.AttrID]func() zcl.Attr{},
	SceneAttr:  []zcl.AttrID{},
}

// Unknown1 is an autogenerated attribute in the Ikea cluster
type Unknown1 zcl.Zu8

const Unknown1Attr zcl.AttrID = 16

func (Unknown1) ID() zcl.AttrID                { return Unknown1Attr }
func (Unknown1) Cluster() zcl.ClusterID        { return IkeaID }
func (Unknown1) Name() string                  { return "Unknown 1" }
func (Unknown1) Readable() bool                { return true }
func (Unknown1) Writable() bool                { return true }
func (Unknown1) Reportable() bool              { return false }
func (Unknown1) SceneIndex() int               { return -1 }
func (a *Unknown1) Value() *Unknown1           { return a }
func (a Unknown1) MarshalZcl() ([]byte, error) { return zcl.Zu8(a).MarshalZcl() }

func (a *Unknown1) UnmarshalZcl(b []byte) ([]byte, error) {
	nt := new(zcl.Zu8)
	br, err := nt.UnmarshalZcl(b)
	*a = Unknown1(*nt)
	return br, err
}

func (a Unknown1) String() string {
	return zcl.Sprintf("%v", zcl.Zu8(a))
}

// Unknown2 is an autogenerated attribute in the Ikea cluster
type Unknown2 zcl.Zu16

const Unknown2Attr zcl.AttrID = 65533

func (Unknown2) ID() zcl.AttrID                { return Unknown2Attr }
func (Unknown2) Cluster() zcl.ClusterID        { return IkeaID }
func (Unknown2) Name() string                  { return "Unknown 2" }
func (Unknown2) Readable() bool                { return true }
func (Unknown2) Writable() bool                { return true }
func (Unknown2) Reportable() bool              { return false }
func (Unknown2) SceneIndex() int               { return -1 }
func (a *Unknown2) Value() *Unknown2           { return a }
func (a Unknown2) MarshalZcl() ([]byte, error) { return zcl.Zu16(a).MarshalZcl() }

func (a *Unknown2) UnmarshalZcl(b []byte) ([]byte, error) {
	nt := new(zcl.Zu16)
	br, err := nt.UnmarshalZcl(b)
	*a = Unknown2(*nt)
	return br, err
}

func (a Unknown2) String() string {
	return zcl.Sprintf("%v", zcl.Zu16(a))
}
